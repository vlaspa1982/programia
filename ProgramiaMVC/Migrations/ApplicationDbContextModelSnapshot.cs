// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgramiaMVC.Data;

#nullable disable

namespace ProgramiaMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProgramiaMVC.Models.Objednavka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumObjednavky")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZakaznikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZakaznikId");

                    b.ToTable("Objednavky");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.ObjednavkaPolozka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CenaZaJednotku")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Mnozstvi")
                        .HasColumnType("int");

                    b.Property<int>("ObjednavkaId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjednavkaId");

                    b.HasIndex("ProduktId");

                    b.ToTable("ObjednavkaPolozky");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cena")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NazevProduktu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PopisProduktu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkladovaZasoba")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Produkty");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.ProduktObrazek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Obrazky");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.Zakaznik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zakaznici");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.Objednavka", b =>
                {
                    b.HasOne("ProgramiaMVC.Models.Zakaznik", "Zakaznik")
                        .WithMany("Objednavky")
                        .HasForeignKey("ZakaznikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zakaznik");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.ObjednavkaPolozka", b =>
                {
                    b.HasOne("ProgramiaMVC.Models.Objednavka", "Objednavka")
                        .WithMany("Polozky")
                        .HasForeignKey("ObjednavkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramiaMVC.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objednavka");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.ProduktObrazek", b =>
                {
                    b.HasOne("ProgramiaMVC.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.Objednavka", b =>
                {
                    b.Navigation("Polozky");
                });

            modelBuilder.Entity("ProgramiaMVC.Models.Zakaznik", b =>
                {
                    b.Navigation("Objednavky");
                });
#pragma warning restore 612, 618
        }
    }
}
